# -*- coding: utf-8 -*-
"""MLA1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CBoC0QG8r0myD22lnZYP-qHbTg0BTSPj
"""

# Question 1

ages = [19, 22, 19, 24, 20, 25, 26, 24, 25, 24]
sorted_ages_OfTheList = sorted(ages)

#1 sorting the list and finding the minimum and maximum ages from the list
print("Sorted list:",sorted_ages_OfTheList)
print("Minimum age =",sorted_ages_OfTheList[0],"Maximum age =",sorted_ages_OfTheList[-1])
minimum = sorted_ages_OfTheList[0]
maximum = sorted_ages_OfTheList[-1]

#2 Adding the minimum and maximum ages to the list
sorted_ages_OfTheList.append(minimum)
sorted_ages_OfTheList.append(maximum)

length = len(sorted_ages_OfTheList)
print("The elements after append:",sorted_ages_OfTheList)

#3 To find median age
if length % 2 == 0 :
  median1 = sorted_ages_OfTheList[length//2]
  median2 = sorted_ages_OfTheList[length//2-1]
  median = (median1+median2)//2
  print("Median:",median)

else :
    median=sorted_ages_OfTheList[length//2]
    print("Median=",median)

#4 To find the average age
#4a sum
length = len(sorted_ages_OfTheList)
sum = 0
for x in range (0,length,1):
    sum = sum+ sorted_ages_OfTheList[x]
#4b average
average = sum/length
print("average :", average)
#5 finding the range 
range = sorted_ages_OfTheList[-1] - sorted_ages_OfTheList[0]
print("range :",range)---

# Question 2
# Creating an empty dictionary called dog 
Dog = {}
# Adding the elemets like  name, color, breed, legs, age to the dog dictionary
Dog = {"name":None,"color":None,"breed":None,"legs":None,"age":None}

#Create a student dictionary and add first_name, last_name, gender, age, marital skills, country, city and address as keys for the dictionarystatus,
student = {
    
    "first_name":None,
    "last_name":None,
    "gender":None,
    "age":None,
    "martial staus":None,
    "skills":None,
    "country":None,
    "city":None,
    "address":None
}

#The student dictionary length
print("\nThe student dictionary length is :",len(student))

student = {
    "first_name":'Phani Datta',
    "last_name":'Pabisetty',
    "gender":'Male',
    "age":'22',
    "martial_status":'Single',
    "skills":['Adaptability','handling crtitical tasks'],
    "city":'kansas',
    "address":"Junpier Dr"

}

print("\nType:",type(student['skills']))
#Checking the values of skills and checking the data type 
print("\nThe skills :",student.get('skills'))
#Modify the skills values by adding one or two skills
student['skills'].append("Team work")
print("\nIn skills we are adding one extra skill:",student.get('skills'))
#Get the dictionary keys as a list
print("\nKeys in the student dictionary :",student.keys())
#Get the dictionary values as a list
print("\nValues in the student dictionary:",student.values())



#Question 3
#Creating a tuple containing names of your sisters and your brothers
brothers = ("Raju","Ramu","Sai")
sisters = ("Roja","Rani")
#Joining the two tuples
siblings = brothers+sisters
print("\nAdding the brothers and sisters:",siblings)
#How many siblings do you have
print("\nThe length of the siblings:",len(siblings))
print("Sibilings:",siblings)
#Adding the father_name and mother_name
siblings = siblings + ("Father_Venkata","Mother_Sarojini")

#Updating to the family_members
family_members = siblings
print("\nUpdating the father and mother name :",family_members,"\n" )

from posixpath import commonpath
#Question 4

it_companies = {'Facebook', 'Google', 'Microsoft', 'Apple', 'IBM', 'Oracle', 'Amazon'}
A = {19, 22, 24, 20, 25, 26}
B = {19, 22, 20, 25, 26, 24, 28, 27}
age = [22, 19, 24, 25, 26, 24, 25, 24]

#1 Find the length of the set it_companies
length=len(it_companies)
print("Length:",length)
print("The length of the it_companies:",it_companies)


#2 Adding  'Twitter' to it_companies set
it_companies.add('Twitter')
print("\nAdding a company, it_companies:",it_companies)

#3 Inserting  multiple IT companies at once to the set it_companies
new_companies =['infosys','TCS','wipro']
it_companies.update(new_companies)
print("\nAdding multiple companies to the, it_companies:",it_companies)

#4 Remove one of the companies from the set it_companies
it_companies.remove('Facebook')
print("\nAfter deleting a company for the it_coampanies set: ",it_companies)

#5 What is the difference between remove and discard
'''
The differnce between remove and discard is if we want to delete an element 
that is not available in the set it will show an error but when it comes to discard
it will not show any error and it doesn't disturb anything
'''
print("\ndiscard usage",it_companies.discard('sony'))

#6 Join A and B
C=B.union(A)
print("\nJoin the A and B, the resultant set",C)

#7 Finding the intersection A and B
common = A.intersection(B)
print("\nIntersection set:", common)

#8 Is A subset of B
print("\nA is a subset of B (True/False):",A.issubset(B))

#9 For A and  B disjooint sets
print("\nFor A and B disjoint set (True/False): ",A.isdisjoint(B))

#10 Joint A with B and B with A
print("\njoining A with B :",A.union(B))
print("joining B with A:", B.union(A))

#11What is the symmetric difference between A and B
print("\nThe symmetric diiference is:",A.symmetric_difference(B))

#12 Delete the sets completely 
del A
del B

#13What is the symmetric difference between A and B
Set = set(age)
print("\nConvert to set",Set)
print("\nCompare the length of the list :",len(age),"and set is :",len(Set))

#Question 5
import math

constant = math.pi
radius = 30 

#Area of a circle
_area_of_circle_ = constant*radius*radius
print("Area:",_area_of_circle_)

#circumference of a circle
_circum_of_circle_ = 2*constant*radius
print("circumference:",_circum_of_circle_)

#calculate the area of the circle 
new_radius = float(input("Enter the radius value:"))
Area = constant*new_radius*new_radius

print("for the radius =",new_radius,"\nArea:",Area)

#Question 6

Splitingthesentence = "I am a teacher and I love to inspire and teach people"

#for getting the individual elements spliting the string 
Split = Splitingthesentence.split(" ")
sp_set = set(Split)
print("Set:",sp_set)
print("Unique word:",len(sp_set))

#Question 7

print("Name\tAge\tCountry\tCity\nAsabeneh\t250\tFinland\tHelsinki")

#Question 8

radius = 10
area = int(3.14*radius**2)

#Formatting the string
formatted_areaofthecircle = 'The area of the circle with the radius {} is {} meter square .'.format(radius,area)
print(formatted_areaofthecircle)

#Question 9
#Taking the input dynamically
n = int(input('Enter the length'))

#Creating two lists one for the lbs and the other one for the kgs
list = []
convert_list= []
for i in range(0,n,1):
  x = float(input('Give the value:'))
  list.append(x)

for i in range (0,n,1):
  q = list[i] * 0.453592
  convert_list.append(round(q,2))
  print("\nConverted to Kilograms",convert_list)